{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","components/dashboard/dashboard.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","style","borderColor","monster","rating","alt","src","imageUrl","value","name","CardList","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","Dashboard","data","labels","costData","datasets","label","fill","tension","width","height","options","maintainAspectRatio","backgroundColor","App","e","setState","searchField","target","state","costsLabels","costsValues","fetch","then","response","json","users","this","filteredMonsters","cost","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e92eb76b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container' style={{ borderColor: props.monster?.rating }} >\r\n        <img alt=\"monster\" src={props.monster?.imageUrl} />\r\n        <div>\r\n            <span className='card-value'> {props.monster?.value} </span><br/>\r\n            <span className='card-label'> {props.monster?.name} </span>\r\n        </div>\r\n    </div>\r\n);","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n    <div className = 'card-list'>\r\n    {props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={monster} />  \r\n      ))}\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search' \r\n        placeholder= {placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);","import React from 'react';\r\n\r\nimport 'chart.js/auto';\r\nimport { Pie, Line } from 'react-chartjs-2';\r\n\r\nimport './dashboard.styles.css';\r\n\r\nexport const Dashboard = props => (\r\n    <div className=\"list\">\r\n        <div className=\"dashboard-card\">\r\n            <div className=\"dashboard-card-header\">\r\n                <div className=\"header-text\">\r\n                    <span>Cloud Hosting Costs</span>\r\n                </div>\r\n                {/* <div className=\"team-button\">\r\n                    <span>ELK</span>\r\n                </div>\r\n                <div className=\"team-button\">\r\n                    <span>Gizmo</span>\r\n                </div>\r\n                <div className=\"team-button\">\r\n                    <span>Platform</span>\r\n                </div>\r\n                <div className=\"team-button\">\r\n                    <span>ELK</span>\r\n                </div>\r\n                <div className=\"team-button\">\r\n                    <span>Gizmo</span>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"dashboard-card-content\">\r\n                <div className=\"content-child\">\r\n                    <Line data={{\r\n                        labels: props.costData.labels,\r\n                        datasets: [{\r\n                            label: 'Costs',\r\n                            data: props.costData.data,\r\n                            fill: true,\r\n                            borderColor: '#ff7f00',\r\n                            tension: 0.1\r\n                        }]\r\n                    }}\r\n                        width={1000}\r\n                        height={200}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                        }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"dashboard-card\">\r\n            <div className=\"dashboard-card-header\">\r\n                <div className=\"header-text\">\r\n                    <span>Sprint Commitment</span>\r\n                </div>\r\n                {/* <div className=\"team-button\">\r\n                    <span>ELK</span>\r\n                </div>\r\n                <div className=\"team-button\">\r\n                    <span>Gizmo</span>\r\n                </div>\r\n                <div className=\"team-button\">\r\n                    <span>Platform</span>\r\n                </div>\r\n                <div className=\"team-button\">\r\n                    <span>ELK</span>\r\n                </div>\r\n                <div className=\"team-button\">\r\n                    <span>Gizmo</span>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"dashboard-card-content\">\r\n                <div className=\"info-content content-child\">\r\n                    <h3>13JUL22 Sprint Goals </h3>\r\n                    <ul>\r\n                        <li>Metric dashboard</li>\r\n                        <li>goal2</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"content-child\">\r\n                    <Pie data={{\r\n                        labels: ['Bugs', 'Features', 'Other'],\r\n                        datasets: [{\r\n                            label: 'Ticket Type Commitment',\r\n                            data: [10, 200, 100],\r\n                            backgroundColor: [\r\n                                'rgb(255, 99, 132)',\r\n                                'rgb(54, 162, 235)',\r\n                                'rgb(255, 205, 86)'\r\n                            ],\r\n                        }]\r\n                    }}\r\n                        height={200}\r\n                        width={300}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                        }} />\r\n                </div>\r\n                <div className=\"content-child\">\r\n                    <Line data={{\r\n                        labels: [1, 2, 3, 4, 5],\r\n                        datasets: [{\r\n                            label: 'Burn Up Chart',\r\n                            data: [3, 9, 15, 15, 27, 34, 46],\r\n                            fill: false,\r\n                            borderColor: '#ff7f00',\r\n                            tension: 0.1\r\n                        }]\r\n                    }}\r\n                        height={200}\r\n                        width={300}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                        }} />\r\n                </div>\r\n                <div className=\"content-child\">\r\n                    <Pie data={{\r\n                        labels: ['Bugs', 'Features', 'Other'],\r\n                        datasets: [{\r\n                            label: 'Ticket Type Delivered',\r\n                            data: [15, 50, 100],\r\n                            backgroundColor: [\r\n                                'rgb(255, 99, 132)',\r\n                                'rgb(54, 162, 235)',\r\n                                'rgb(255, 205, 86)'\r\n                            ],\r\n                        }]\r\n                    }}\r\n                        height={200}\r\n                        width={300}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                        }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n);","import React, {Component} from 'react' ;\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport { SearchBox } from \"./components/search-box/search-box.component\";\r\nimport { Dashboard } from './components/dashboard/dashboard.component';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: '',\r\n      costsLabels: [],\r\n      costsValues: [],\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://metrics.enthuse-test.com/v1/costs')\r\n    .then(response => response.json())\r\n    .then(data => this.setState({costsLabels: data[0].labels, costsValues: data[0].data}));\r\n\r\n    fetch('https://metrics.enthuse-test.com/v1/metrics')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ monsters: users }));\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ searchField: e.target.value });\r\n  }\r\n  \r\n  render() {\r\n    const { monsters, searchField, costsLabels, costsValues, cost} = this.state; \r\n    const filteredMonsters = monsters.filter(monster => \r\n      monster?.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n    const costData = {labels: costsLabels, data: costsValues};\r\n    return (\r\n      <div className=\"App\">\r\n        <img alt=\"logo\" src={`https://id.enthuse-test.com/sso/static/common/images/enthuse/enthuse_logo_horizontal.svg`}  /> \r\n        <h1> Metrics Dashboard </h1>\r\n        <SearchBox\r\n          placeholder='search metrics'\r\n          handleChange={this.handleChange}\r\n        />\r\n        <CardList monsters={filteredMonsters}/>\r\n        <Dashboard costData={costData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}